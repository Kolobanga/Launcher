{
    "AppName": "Houdini",
    "Flags": [
        {
            "Name": "Foreground",
            "Description": "In Mac OS X and Linux, when you run Houdini from the command line, by default it \"backgrounds\" itself, returning control of the terminal to the shell. This option instead keeps Houdini in the \"foreground\", meaning you won\u2019t be able to type more commands to the shell until Houdini exists or you press \u2303 Ctrl + Z to pause the foreground process.",
            "Template": "-foreground"
        },
        {
            "Name": "Background",
            "Description": "Houdini will \"background\" itself after starting, returning control of the terminal to the shell. This is the default.",
            "Template": "-background"
        },
        {
            "Name": "Geometry",
            "Description": "Define the window geometry on the screen (see also -span). For example\nhoudini -geometry=WxH+X+Y\n(where W is width, H is height, X is horizontal position, and Y is vertical position). The geometry specification cannot have spaces. X and Y may be negative (in which case you would use - instead of + as a separator). Some window managers do not allow larger windows than the screen, overlapping of manager toolbars, and/or positioning offscreen.",
            "Fields": {
                "Width": 1920,
                "Height": 1080,
                "Left": 0,
                "Right": 0
            },
            "Template": "-geometry={Width}x{Height}+{Left}+{Top}"
        },
        {
            "Name": "Span",
            "Description": "When you specify this option on a computer with multiple monitors, Houdini will start up spanning all monitors, so the main Houdini window fills them all (where possible, discounting resolution differences and non-rectangular layouts). This only works on some window managers, and has no effect in single-monitor setups. Cannot be used with -geometry.",
            "Template": "-span"
        },
        {
            "Name": "Screen",
            "Description": "Which screen to open the main Houdini window on (for computers with multiple monitors). Note the space between the option and the screen number.",
            "Fields": {
                "Screen_number": 0
            },
            "Template": "-screen {Screen_number}"
        },
        {
            "Name": "Threads",
            "Description": "The maximum number of threads Houdini may use. Note no space between option and the number of threads.",
            "Fields": {
                "Number_of_threads": 1
            },
            "Template": "-j{Number_of_threads}"
        },
        {
            "Name": "Manual Cook Mode",
            "Description": "Start Houdini in \"manual\" cook mode.",
            "Template": "-n"
        },
        {
            "Name": "License Mode",
            "Description": "Start Houdini in Apprentice, Core, Indie, or FX mode. This will require an appropriate license.",
            "Fields": {
                "License_Mode": {
                    "Apprentice": "-apprentice",
                    "Core": "-core",
                    "Indie": "-indie",
                    "FX": "-force-fx-license"
                }
            },
            "Template": "{License_Mode}"
        },
        {
            "Name": "Wait for UI",
            "Description": "If mixed in with the files to load, specifies a point at which Houdini should wait until the GUI is available before loading the rest of the files.\nFor example:\nhoudini -foreground myscript.cmd waitforui setupshelf.py my.hip\nIn this example, Houdini would load myscript.cmd immediately, but wait until the GUI was available before loading setupshelf.py and my.hip. This is useful for scripts that require certain UI elements to function (such as desktops, shelves, or panes).",
            "Template": "waitforui"
        }
    ]
}
